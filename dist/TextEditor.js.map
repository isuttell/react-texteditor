{"version":3,"sources":["src/index.jsx"],"names":[],"mappings":"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","file":"src/index.jsx","sourcesContent":["/*******************************************************************************\n * TextEditor\n *\n * @author       Isaac Suttell <isaac_suttell@playstation.sony.com>\n * @file         Rich Text Editor for React\n ******************************************************************************/\n\nvar React = require('react');\nvar classNames = require('classnames');\nvar _ = require('lodash');\n\nvar TextEditor = React.createClass({\n  /**\n   * Defaults\n   *\n   * @return    {Object}\n   */\n  getDefaultProps: function () {\n    return {\n      className: '',\n      editable: false,\n      value: '',\n      tabIndex: void 0,\n      pasteAsPlain: true,\n      buttons: {\n        bold: {\n          enabled: true,\n          command: 'bold',\n          iconClass: 'icon-bold'\n        },\n        italic: {\n          enabled: true,\n          command: 'italic',\n          iconClass: 'icon-italic'\n        },\n        underline: {\n          enabled: true,\n          command: 'underline',\n          iconClass: 'icon-underline'\n        }\n      }\n    };\n  },\n\n  /**\n   * Loose type checking. Removed during production minification\n   *\n   * @type    {Object}\n   */\n  propTypes: {\n    className: React.PropTypes.string,\n    editable: React.PropTypes.bool,\n    value: React.PropTypes.string,\n    tabIndex: React.PropTypes.number,\n    buttons: React.PropTypes.object\n  },\n\n  /**\n   * I am not focused\n   *\n   * @return    {Object}\n   */\n  getInitialState: function () {\n    return {\n      focus: false\n    };\n  },\n\n  /**\n   * On input and blur emit a change to our parent\n   *\n   * @param     {SyntheticEvent}    event\n   */\n  emitChange: function(event){\n    var html = this.refs.content.getDOMNode().innerHTML;\n\n    var ev = _.extend(event, {\n      target: { value: html }\n    });\n\n    if (html !== this.lastHtml && _.isFunction(this.props.onChange)) {\n      this.props.onChange(ev);\n    }\n\n    this.lastHtml = html;\n\n    if(event.type === 'blur' && _.isFunction(this.props.onBlur)) {\n      this.props.onBlur(ev);\n    }\n  },\n\n  /**\n   * Onlu update if it chagned\n   *\n   * @param     {Object}    nextProps\n   * @return    {Boolean}\n   */\n  shouldComponentUpdate: function(nextProps, nextState){\n    return (this.refs.content && nextProps.value !== this.refs.content.getDOMNode().innerHTML) ||\n          this.state.focus !== nextState.focus;\n  },\n\n  /**\n   * Execute a command: bold, underline, italic\n   *\n   * @param     {String}        command\n   * @param     {MouseEvent}    event\n   */\n  handleCommand: function(command, event) {\n    event.preventDefault();\n    document.execCommand(command, null, '');\n  },\n\n  /**\n   * Remove text styles from paste\n   *\n   * @param     {ClipboardEvent}    event\n   */\n  handlePaste: function(event) {\n    if(this.props.pasteAsPlain !== true) {\n      return;\n    }\n\n    // Prevent paste\n    event.preventDefault();\n\n    // Get text without styles\n    var text = event.clipboardData.getData('text/plain');\n\n    // Paste the unformatted text\n    document.execCommand('insertHTML', false, text);\n  },\n\n  /**\n   * Bind to the body so we can check for clicks outside of the TextEditor\n   * and hide the controls\n   */\n  componentDidMount: function () {\n    document.body.addEventListener('click', this.handleBodyClick);\n  },\n\n  /**\n   * Clean up\n   */\n  componentWillUnmount: function () {\n    document.body.removeEventListener('click', this.handleBodyClick);\n  },\n\n  /**\n   * We have clarity\n   */\n  handleFocus: function() {\n    this.setState({\n      focus: true\n    });\n  },\n\n  /**\n   * Handle clicks outside of the Selector\n   *\n   * @param     {Event}    event\n   */\n  handleBodyClick: function(event) {\n    if(this.state.focus) {\n      // Only search if the select box is open\n      var source = event.target;\n      var found = false; \n      // Search up the tree for the component node\n      while (source.parentNode) {\n        found = (source === this.getDOMNode());\n        if(found) {\n          return;\n        }\n        source = source.parentNode;\n      }\n\n      // If we couldn't find this components node then close it\n      this.setState({\n        focus: false\n      });\n    }\n  },\n\n  /**\n   * Reader a single button and bind it's command\n   *\n   * @param     {String}    btn\n   * @return    {React}\n   */\n  renderButton: function(btn) {\n    var options = this.props.buttons[btn];\n    if(options && options.enabled) {\n      return <button\n        onClick={this.handleCommand.bind(this, options.command)}\n        className={classNames('btn', 'btn-icon', options.iconClass)} type='button' />;\n    } else {\n      return null;\n    }\n  },\n\n  /**\n   * Render buttons specified in props\n   *\n   * @return    {React}\n   */\n  renderButtons: function() {\n    if(!this.props.editable) {\n      return null;\n    }\n\n    var controls = [];\n    for(var key in this.props.buttons) {\n      if(this.props.buttons.hasOwnProperty(key)) {\n        controls.push(this.renderButton(key));\n      }\n    }\n\n    return(\n      <div className='text-editor--controls btn-group'>\n        {controls}\n      </div>\n    );\n  },\n\n  /**\n   * Render\n   *\n   * @return    {React}\n   */\n  render: function() {\n    // Ensure value is not null\n    var value = this.props.value ? this.props.value : '';\n\n    if(this.props.editable) {\n      var componentStyles = classNames(this.props.className, 'text-editor', {\n        'focus' : this.state.focus\n      });\n\n      return (\n        <div className={componentStyles} onClick={this.handleFocus}>\n          {this.renderButtons()}\n          <div\n            className='text-editor--field'\n            onInput={this.emitChange}\n            onBlur={this.emitChange}\n            onPaste={this.handlePaste}\n            onKeyDown={this.props.onKeyDown}\n            ref='content'\n            tabIndex={this.props.tabIndex}\n            contentEditable\n            dangerouslySetInnerHTML={{__html:value}} />\n        </div>\n        );\n    } else {\n      return (\n        <div\n          className={classNames(this.props.className, 'text-editor')}\n          dangerouslySetInnerHTML={{__html:value}} />\n      );\n    }\n  }\n});\n\nmodule.exports = TextEditor;\n"]}